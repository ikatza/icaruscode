#include "services_common_icarus.fcl"
#include "messages_icarus.fcl"
#include "rootoutput_icarus.fcl"
#include "backtrackerservice.fcl"
#include "particleinventoryservice.fcl"

#include "flashmatch_simple_icarus.fcl"

process_name: FlashMatch

services:{
  TFileService: { fileName: "flashmatch_icarus.root" }
  @table::icarus_basic_services
  message:                         @local::icarus_message_services
  BackTrackerService:        @local::standard_backtrackerservice
  ParticleInventoryService:  @local::standard_particleinventoryservice
}


source:{
  module_type:     RootInput
}

physics: {
  producers: {
    fmatchCryo0: @local::icarus_simple_flashmatch_0
    fmatchCryo1: @local::icarus_simple_flashmatch_1
  }

  reco: [fmatchCryo0, fmatchCryo1]
  stream: [out]
  end_paths: [stream]
}

outputs: {
  out: {
    @table::icarus_rootoutput # inherit shared settings
    module_type: RootOutput
    fileName: "flashmatch_icarus.root"
    dataTier:    "reconstructed"
    compressionLevel: 0
    outputCommands: [ ]
  }
}

# override variables
# physics.producers.fmatchCryo0.ThresholdTerm: 10.
# physics.producers.fmatchCryo0.InputFileName: "FlashMatch/fm_metrics_sbnd.root"